@page "/products"
@page "/{url}"
@inject IProductService productService
@inject ICartService cartService

@if (serviceModel.List != null)
{
    <div class="row">
        <div class="row sticky-top mb-1">
            <div class="col-md-8 mt-1"><h3 class="text-muted" style="font-family:'Javanese Text'">Products</h3></div>
        </div>
        <hr />
        @foreach (var product in serviceModel.List)
        {
            <div class="col-md-3">
                <div class="card border-1 m-2 mb-2">
                    <a href="productDetails/@product.Id" style="text-decoration:none;">
                        <div class="card-header text-center">
                            <img class="card-img-top" src="@product.Image" style="width:200px; height:150px" />
                            @if (DateTime.Now < product.UploadedDate.AddDays(10))
                            {
                                <span class="badge bg-info position-absolute top-0 start-100 translate-middle badge rounded-pill">New</span>
                            }
                        </div>
                        <div class="card-body">
                            <p class="card-body-text">
                                <span class="prodName">@product.Name </span>&nbsp; &nbsp;
                                <br />
                                <span class="prodDescription">@product.Description</span><br>
                                @if (product.NewPrice != 0 && product.NewPrice < product.OriginalPrice)
                                {
                                    <span class="originalPrice text-decoration-line-through"><i>₦ @product.OriginalPrice</i></span>
                                    <span>&nbsp; &nbsp;</span>
                                    <span class="badge rounded-end reducedbadge">Reduced</span>
                                    <br />
                                    <span class="text-center newPrice" style="font-size:16px;font-weight: bold;"><i>₦ @product.NewPrice</i></span>
                                }
                                else
                                {
                                    <span class="" style="color:#000;font-weight: bold;"><i>₦ @product.OriginalPrice</i></span>
                                }

                            </p>
                        </div>
                    </a>

                    <div class="card-footer">
                        <button class="btn btn-sm atcbtn" @onclick="async ()=> await AddProductToCart(product.Id)">
                            @* <i class="oi oi-cart fs-5"></i> *@
                            ADD TO CART
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col-md-6 offset-3 mb-5">
                <div class="d-flex justify-content-center mt-5">
                    <div class="spinner-border text-danger" role="status" style="width: 5rem; height: 5rem;">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public string Url { get; set; } = string.Empty;
    public ServiceModel<Product> serviceModel = new ServiceModel<Product>();

    private int Quantity = 1;
    private string? Message = string.Empty;
    private string? CssClass = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await GetProducts();
    }

    private async Task GetProducts() => serviceModel = await productService.GetProducts();

    protected override async Task OnParametersSetAsync()
    {
        if (Url != null)
            serviceModel = await productService.GetProductByCategory(Url);
        else
            serviceModel = await productService.GetProducts();
    }

    private async Task AddProductToCart(int productId)
    {
        Message = "";
        CssClass = "";
        var product = serviceModel.List.FirstOrDefault(p => p.Id == productId);
        if (product != null && Quantity >= 1 && Quantity <= product.Quantity)
        {
            var cartModel = new MyCartModel
            {
                ProductId = productId,
                UserQuantity = Quantity
            };
            await cartService.AddToCart(cartModel);
        }
        else
        {
            Message = "Invalid quantity provided";
            CssClass = "warning";
        }
    }

}
@* &#8358 ₦ &#x20A6  *@ @* Naira Symbol *@