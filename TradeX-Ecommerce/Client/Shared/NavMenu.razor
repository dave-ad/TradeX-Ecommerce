@inject ICategoryService categoryService
@inject NavigationManager NavigationManager

﻿<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <span class="oi oi-monitor" style="color:white;" aria-hidden="true"></span>
        @if (!@IconMenuActive)
        {
            <a class="navbar-brand" href="">TradeXECommerce</a>
        }

        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>
<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span>
                @if (!@IconMenuActive)
                {
                    <label>Home</label>
                }
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="products">
                <span class="oi oi-tag" aria-hidden="true"></span>
                @if (!@IconMenuActive)
                {
                    <label>Products</label>
                }
            </NavLink>
        </div>

        @if (!@IconMenuActive)
        {
            <div class="text-light">Administration</div>
        }
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="manage-products" Match="NavLinkMatch.All">
                <span class="oi oi-arrow-circle-top p-1" aria-hidden="true"></span>
                @if (!@IconMenuActive)
                {
                    <label>Manage Products</label>
                }
            </NavLink>
            <NavLink class="nav-link" href="manage-categories" Match="NavLinkMatch.All">
                <span class="oi oi-arrow-circle-top p-1" aria-hidden="true"></span>
                @if (!@IconMenuActive)
                {
                    <label>Manage Category</label>
                }
            </NavLink>
        </div>

        @if (!@IconMenuActive)
        {
            <div class="text-light">Categories</div>
        }
        <div class="nav-item px-3">
            @if (serviceModel.List != null)
            {
                foreach (var cat in serviceModel.List)
                {
                    <NavLink class="nav-link" href="@cat.Name" Match="NavLinkMatch.All">
                        <span class="oi oi-arrow-circle-right" aria-hidden="true"></span>
                        @if (!@IconMenuActive)
                        {
                            @cat.Name
                        }
                    </NavLink>
                }
            }
            else
            {
                <div class="row">
                    <div class="badge">
                        Loading...
                    </div>
                </div>
            }
        </div>

        @*         <div class="nav-item px-3">
        <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
        <span class="oi oi-tag p-1" aria-hidden="true"></span>
        @if (!@IconMenuActive)
        {
        <label>Update User Profile</label>
        }
        </NavLink>
        </div>
        <div class="nav-item px-3">
        <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
        <span class="oi oi-tag p-1" aria-hidden="true"></span>
        @if (!@IconMenuActive)
        {
        <label>Make Enquires</label>
        }
        </NavLink>
        </div> *@
    </nav>
</div>

<div class="bottom-row">
    <div class="icon-menu-arrow">
        @if (!@IconMenuActive)
        {
            <span class="oi oi-arrow-left" style="color: white;" @onclick="ToggleIconMenu"></span>
        }
        else
        {
            <span class="oi oi-arrow-right" style="color: white;" @onclick="ToggleIconMenu"></span>
        }
    </div>
</div>


@code {
    private bool IconMenuActive { get; set; } = false;

    [Parameter]
    public EventCallback<bool> ShowIconMenu { get; set; }


    ServiceModel<Category> serviceModel = new ServiceModel<Category>();
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        collapseNavMenu = true;
        serviceModel = await categoryService.GetCategories();
    }

    private async Task ToggleIconMenu()
    {
        IconMenuActive = !IconMenuActive;
        await ShowIconMenu.InvokeAsync(IconMenuActive);

    }
}
